import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { useState } from "react";
import redEarrings from "@/assets/red-earrings.jpg";
import bluePendant from "@/assets/blue-pendant.jpg";
import yellowKeychain from "@/assets/yellow-keychain.jpg";
import jewelryCollection from "@/assets/lego-jewelry-collection.jpg";

const categories = [
  {
    id: 1,
    name: "–°–µ—Ä—å–≥–∏",
    image: redEarrings,
    description: "–°—Ç–∏–ª—å–Ω—ã–µ —Å–µ—Ä—å–≥–∏ –∏–∑ LEGO –¥–µ—Ç–∞–ª–µ–π",
    color: "bg-primary",
    itemCount: 12
  },
  {
    id: 2,
    name: "–ü–æ–¥–≤–µ—Å–∫–∏",
    image: bluePendant,
    description: "–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–¥–≤–µ—Å–∫–∏ —Å LEGO —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏",
    color: "bg-secondary",
    itemCount: 8
  },
  {
    id: 3,
    name: "–ë—Ä–∞—Å–ª–µ—Ç—ã",
    image: jewelryCollection,
    description: "–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –±—Ä–∞—Å–ª–µ—Ç—ã –∏–∑ LEGO –∫—É–±–∏–∫–æ–≤",
    color: "bg-accent",
    itemCount: 6
  },
  {
    id: 4,
    name: "–ë—Ä–µ–ª–æ–∫–∏",
    image: yellowKeychain,
    description: "–í–µ—Å—ë–ª—ã–µ –±—Ä–µ–ª–æ–∫–∏ –∏–∑ —Ü–≤–µ—Ç–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π",
    color: "bg-gradient-lego",
    itemCount: 15
  }
];

const testimonials = [
  {
    id: 1,
    text: "–≠—Ç–∏ LEGO —Å–µ—Ä—å–≥–∏ —Ç–∞–∫–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ! –û–±–æ–∂–∞—é —Å—Ç–∏–ª—å Vuella!",
    author: "–ê–Ω–Ω–∞ –ö.",
    rating: 5
  },
  {
    id: 2,
    text: "–ü–æ–¥–≤–µ—Å–∫–∞ –ø—Ä–æ—Å—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è! –û—á–µ–Ω—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
    author: "–ú–∞—Ä–∏—è –ü.",
    rating: 5
  },
  {
    id: 3,
    text: "–ë—Ä–∞—Å–ª–µ—Ç –ø–æ–ª—É—á–∏–ª—Å—è –¥–∞–∂–µ –∫—Ä–∞—Å–∏–≤–µ–µ, —á–µ–º –Ω–∞ —Ñ–æ—Ç–æ! –°–ø–∞—Å–∏–±–æ!",
    author: "–ï–ª–µ–Ω–∞ –°.",
    rating: 5
  },
  {
    id: 4,
    text: "–ó–∞–∫–∞–∑–∞–ª–∞ –Ω–∞–±–æ—Ä - –≤—Å–µ –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ! –ù–µ–æ–±—ã—á–Ω–æ –∏ —Å—Ç–∏–ª—å–Ω–æ!",
    author: "–î–∞—Ä—å—è –í.",
    rating: 5
  }
];

export const JewelrySection = () => {
  const [currentTestimonial, setCurrentTestimonial] = useState(0);

  const nextTestimonial = () => {
    setCurrentTestimonial((prev) => (prev + 1) % testimonials.length);
  };

  const prevTestimonial = () => {
    setCurrentTestimonial((prev) => (prev - 1 + testimonials.length) % testimonials.length);
  };

  return (
    <section id="jewelry" className="py-20 bg-background">
      <div className="section-container">
        {/* Section Header */}
        <div className="text-center space-y-4 mb-12">
          <h2 className="section-title">–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π —Å—Ç–∏–ª—å —Å LEGO —É–∫—Ä–∞—à–µ–Ω–∏—è–º–∏ Vuella</h2>
          <p className="section-subtitle max-w-3xl mx-auto">
            –ö–∞–∂–¥–æ–µ —É–∫—Ä–∞—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –≤—Ä—É—á–Ω—É—é —Å –ª—é–±–æ–≤—å—é –∏ –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º. 
            –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–∏–∑–∞–π–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã—Ä–∞–∂–∞—é—Ç –≤–∞—à—É –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å.
          </p>
        </div>

        {/* Categories Grid */}
        <div className="grid sm:grid-cols-2 lg:grid-cols-4 gap-8 mb-12">
          {categories.map((category, index) => (
            <Card key={category.id} className="product-card group cursor-pointer" style={{ animationDelay: `${index * 0.1}s` }}>
              {/* Category Image */}
              <div className="relative overflow-hidden rounded-lg mb-4">
                <div className={`absolute inset-0 opacity-0 group-hover:opacity-20 transition-opacity ${category.color} rounded-lg`}></div>
                <img
                  src={category.image}
                  alt={category.name}
                  className="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-110 rounded-lg"
                />
                <div className="absolute top-3 right-3 bg-white/90 text-foreground px-2 py-1 rounded-full text-xs font-semibold">
                  {category.itemCount} —à—Ç.
                </div>
              </div>

              {/* Category Info */}
              <div className="space-y-3">
                <h3 className="font-bold text-lg text-foreground group-hover:text-primary transition-colors">
                  {category.name}
                </h3>
                <p className="text-sm text-muted-foreground leading-relaxed">
                  {category.description}
                </p>
                <Button 
                  className="btn-accent w-full opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0"
                >
                  –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ
                </Button>
              </div>
            </Card>
          ))}
        </div>

        {/* Testimonials */}
        <div className="bg-card rounded-2xl p-8 shadow-lego border border-border/20 max-w-2xl mx-auto mb-8 relative">
          <div className="text-center space-y-4">
            <div className="flex justify-center space-x-1 text-accent text-xl">
              {Array.from({ length: testimonials[currentTestimonial].rating }, (_, i) => (
                <span key={i}>‚≠ê</span>
              ))}
            </div>
            <blockquote className="text-lg italic text-muted-foreground">
              "{testimonials[currentTestimonial].text}"
            </blockquote>
            <cite className="text-sm font-medium text-foreground">
              ‚Äî {testimonials[currentTestimonial].author}, —Å—á–∞—Å—Ç–ª–∏–≤–∞—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—å–Ω–∏—Ü–∞
            </cite>
          </div>
          
          {/* Navigation buttons */}
          <button
            onClick={prevTestimonial}
            className="absolute left-4 top-1/2 -translate-y-1/2 w-8 h-8 bg-primary/10 hover:bg-primary/20 rounded-full flex items-center justify-center transition-colors"
          >
            <span className="text-primary">‚Üê</span>
          </button>
          <button
            onClick={nextTestimonial}
            className="absolute right-4 top-1/2 -translate-y-1/2 w-8 h-8 bg-primary/10 hover:bg-primary/20 rounded-full flex items-center justify-center transition-colors"
          >
            <span className="text-primary">‚Üí</span>
          </button>
          
          {/* Dots indicator */}
          <div className="flex justify-center space-x-2 mt-6">
            {testimonials.map((_, index) => (
              <button
                key={index}
                onClick={() => setCurrentTestimonial(index)}
                className={`w-2 h-2 rounded-full transition-colors ${
                  index === currentTestimonial ? 'bg-primary' : 'bg-muted-foreground/30'
                }`}
              />
            ))}
          </div>
        </div>

        {/* CTA */}
        <div className="text-center">
          <Button className="btn-hero group">
            –ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å
            <span className="ml-2 transition-transform group-hover:rotate-12">üß±</span>
          </Button>
        </div>
      </div>
    </section>
  );
};